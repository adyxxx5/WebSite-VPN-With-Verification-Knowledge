DROP DATABASE IF EXISTS WebSiteVPN;
CREATE DATABASE WebSiteVPN;
USE WebSiteVPN;

/*TABLE ID_USERS*/
CREATE TABLE USERS(
	ID_USER INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(30) NOT NULL,
	LASTNAME VARCHAR(30) NOT NULL,
	AGE INTEGER,
	EMAIL VARCHAR(30),
	TIMES INTEGER,
	PRIMARY KEY(ID_USER)
);

/*TABLE SESSIONS*/
CREATE TABLE SESSIONS(
	ID_SESSION INTEGER NOT NULL AUTO_INCREMENT,
	TIMES INTEGER,
	POINTS INTEGER NOT NULL,
	ID_USER INTEGER NOT NULL,
	PRIMARY KEY(ID_SESSION),
	FOREIGN KEY(ID_USER) REFERENCES USERS(ID_USER)
);

/*TABLE QUESTIONS*/
CREATE TABLE QUESTIONS(
	ID_QUESTION INTEGER NOT NULL,
	QUESTION VARCHAR(255) NOT NULL,
	PRIMARY KEY(ID_QUESTION)
);

/*TABLE RANDOM QUESTION*/
CREATE TABLE RANDOM_Q(
	ID_SESSION INTEGER NOT NULL,
	ID_QUESTION INTEGER NOT NULL,
	FOREIGN KEY(ID_SESSION) REFERENCES SESSIONS(ID_SESSION),
	FOREIGN KEY(ID_QUESTION) REFERENCES QUESTIONS(ID_QUESTION),
	PRIMARY KEY(ID_SESSION, ID_QUESTION)
);

/*TABLE ANSWERS*/
CREATE TABLE ANSWERS(
	ID_ANSWER INTEGER NOT NULL,
	ANSWER VARCHAR(150) NOT NULL,
	CORRECT_ANSWER BOOLEAN NOT NULL,
	ID_QUESTION INTEGER NOT NULL,
	PRIMARY KEY(ID_ANSWER),
	FOREIGN KEY(ID_QUESTION) REFERENCES QUESTIONS(ID_QUESTION)
);

/*Name of the users who have did the test*/
DELIMITER //
CREATE PROCEDURE UserDoTest()
BEGIN
	SELECT NAME, LASTNAME, AGE, EMAIL FROM USERS;
END //
DELIMITER ;

/*How many times did the test a user*/
DELIMITER //
CREATE PROCEDURE TimeUserDoTest()
BEGIN
	SELECT NAME, LASTNAME, TIMES FROM USERS;
END //
DELIMITER ;

/*See the questions in table "questions"*/
DELIMITER //
CREATE PROCEDURE SeeQuestion()
BEGIN
	SELECT ID_QUESTION, QUESTION FROM QUESTIONS;
END //
DELIMITER ;

/*See the questions in table "questions" with answers*/
DELIMITER //
CREATE PROCEDURE SeeQuestionAnswers()
BEGIN
	SELECT Q.ID_QUESTION, Q.QUESTION, A.TEXT_ANSWER, A.CORRECT_ANSWER FROM QUESTIONS AS Q, ANSWERS AS A WHERE Q.ID_QUESTION=A.ID_QUESTION;
END //
DELIMITER ;

/*See the correct answer for question*/
DELIMITER //
CREATE PROCEDURE CorrectAnswer()
BEGIN
	SELECT Q.ID_QUESTION, Q.QUESTION, A.ANSWER FROM QUESTIONS AS Q INNER JOIN ANSWERS AS A ON A.CORRECT_ANSWER IS TRUE AND Q.ID_QUESTION=A.ID_QUESTION;
END //
DELIMITER ;

/*People who did the test with score*/
DELIMITER //
CREATE PROCEDURE SessionsUser()
BEGIN
	SELECT ID_SESSION, LASTNAME, NAME, POINTS, S.TIMES AS "TIME" FROM SESSIONS AS S INNER JOIN USERS AS U ON S.ID_USER=U.ID_USER;
END //
DELIMITER ;


/*Test data */
INSERT INTO USERS VALUES(1, "Adi", "Aioane", 18, "adyxxx5@yahoo.com", 1),(2, "Pippo", "Paperino", 15, "pippo.paperino@yahoo.it",1);
INSERT INTO SESSIONS VALUES(1, "15", 23, 1);
INSERT INTO QUESTIONS VALUES(1, "Che cosa e' l'HOMEWORKING?"),(2, "Che cosa e'?");
INSERT INTO ANSWERS VALUES(1,"RISPOSTA A", FALSE, 1),(2,"RISPOSTA B", FALSE, 1), (3,"RISPOSTA C", TRUE, 1), (4,"RISPOSTA A", TRUE, 2);

GRANT EXECUTE ON PROCEDURE UserDoTest TO utente IDENTIFIED BY 'password';
GRANT EXECUTE ON PROCEDURE TimeUserDoTest TO utente IDENTIFIED BY 'password';
GRANT EXECUTE ON PROCEDURE SeeQuestion TO utente IDENTIFIED BY 'password';
GRANT EXECUTE ON PROCEDURE SessionsUser TO utente IDENTIFIED BY 'password';