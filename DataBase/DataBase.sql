DROP DATABASE IF EXISTS WebSiteVPN;
CREATE DATABASE WebSiteVPN;
USE WebSiteVPN;

/*TABLE ID_USERS*/
CREATE TABLE USERS(
	ID_USER INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(30) NOT NULL,
	LASTNAME VARCHAR(30) NOT NULL,
	AGE INTEGER,
	PRIMARY KEY(ID_USER)
);

/*TABLE SESSIONS*/
CREATE TABLE SESSIONS(
	ID_SESSION INTEGER NOT NULL AUTO_INCREMENT,
	TIMES INTEGER,
	TIMER INTEGER, 
	POINTS INTEGER,
	ID_USER INTEGER NOT NULL,
	PRIMARY KEY(ID_SESSION),
	FOREIGN KEY(ID_USER) REFERENCES USERS(ID_USER)
);

/*TABLE QUESTIONS*/
CREATE TABLE QUESTIONS(
	ID_QUESTION INTEGER NOT NULL,
	QUESTION VARCHAR(255) NOT NULL,
	PRIMARY KEY(ID_QUESTION)
);

/*TABLE RANDOM QUESTION*/
CREATE TABLE RANDOM_Q(
	ID_SESSION INTEGER NOT NULL,
	ID_QUESTION INTEGER NOT NULL,
	FOREIGN KEY(ID_SESSION) REFERENCES SESSIONS(ID_SESSION),
	FOREIGN KEY(ID_QUESTION) REFERENCES QUESTIONS(ID_QUESTION),
	PRIMARY KEY(ID_SESSION, ID_QUESTION)
);

/*TABLE ANSWERS*/
CREATE TABLE ANSWERS(
	ID_ANSWER INTEGER NOT NULL,
	ANSWER VARCHAR(150) NOT NULL,
	CORRECT_ANSWER BOOLEAN NOT NULL,
	ID_QUESTION INTEGER NOT NULL,
	PRIMARY KEY(ID_ANSWER),
	FOREIGN KEY(ID_QUESTION) REFERENCES QUESTIONS(ID_QUESTION)
);


/*See the "n" questions*/
DELIMITER //
CREATE PROCEDURE Question(_num INTEGER)
BEGIN
	SELECT ID_QUESTION, QUESTION FROM QUESTIONS ORDER BY RAND() LIMIT _NUM;
END //
DELIMITER ;

/*See the answer for question "n"*/
DELIMITER //
CREATE PROCEDURE Answer(_Question INTEGER)
BEGIN
	SELECT ANSWER FROM ANSWERS WHERE ID_QUESTION=_QUESTION;
END //
DELIMITER ;

/*Name of the users who have did the test*/
DELIMITER //
CREATE PROCEDURE UserDoTest()
BEGIN
	SELECT NAME, LASTNAME, AGE FROM USERS;
END //
DELIMITER ;






/*Test data*/
INSERT INTO USERS VALUES(1, "Adi", "Aioane", 18),(2, "Pippo", "Paperino", 12);
INSERT INTO SESSIONS VALUES(1, 15, 20, 23, 1),(2, 23, 25, 12, 2);
INSERT INTO QUESTIONS VALUES(1, "Che cosa e' l'HOMEWORKING?"),(2, "Che cosa e'?");
INSERT INTO ANSWERS VALUES(1,"RISPOSTA A", FALSE, 1),(2,"RISPOSTA B", FALSE, 1), (3,"RISPOSTA C", TRUE, 1), (4,"RISPOSTA A", TRUE, 2);


/*Permission for procedure
GRANT EXECUTE ON PROCEDURE UserDoTest TO utente IDENTIFIED BY 'password';
GRANT EXECUTE ON PROCEDURE TimeUserDoTest TO utente IDENTIFIED BY 'password';
GRANT EXECUTE ON PROCEDURE SeeQuestion TO utente IDENTIFIED BY 'password';
GRANT EXECUTE ON PROCEDURE SessionsUser TO utente IDENTIFIED BY 'password';
*/